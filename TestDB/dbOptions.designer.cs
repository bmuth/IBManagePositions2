#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestDB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="E:\\FINANCE\\DATABASE\\OPTIONS.MDF")]
	public partial class dbOptionsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPosition(Position instance);
    partial void UpdatePosition(Position instance);
    partial void DeletePosition(Position instance);
    #endregion
		
		public dbOptionsDataContext() : 
				base(global::TestDB.Properties.Settings.Default.E__FINANCE_DATABASE_OPTIONS_MDFConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbOptionsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbOptionsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbOptionsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbOptionsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Position> Positions
		{
			get
			{
				return this.GetTable<Position>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Position")]
	public partial class Position : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Ticker;
		
		private System.Nullable<bool> _IfClosed;
		
		private bool _IfCall;
		
		private bool _IfSell;
		
		private System.Nullable<decimal> _Strike;
		
		private System.Nullable<System.DateTime> _Expiry;
		
		private System.Nullable<decimal> _OpenPrice;
		
		private System.Nullable<decimal> _ClosePrice;
		
		private System.Nullable<decimal> _Premium;
		
		private int _NoContracts;
		
		private System.Nullable<decimal> _Commissions;
		
		private System.Nullable<System.DateTime> _OpenDate;
		
		private System.Nullable<System.DateTime> _ClosedDate;
		
		private System.Nullable<decimal> _ProfitLoss;
		
		private System.Nullable<System.DateTime> _ProfitLossTimeStamp;
		
		private System.Nullable<decimal> _YesterdayProfitLoss;
		
		private System.Nullable<System.DateTime> _YesterdayProfitLossTimeStamp;
		
		private System.Nullable<System.Guid> _Linkage;
		
		private System.Nullable<System.DateTime> _LastEmail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTickerChanging(string value);
    partial void OnTickerChanged();
    partial void OnIfClosedChanging(System.Nullable<bool> value);
    partial void OnIfClosedChanged();
    partial void OnIfCallChanging(bool value);
    partial void OnIfCallChanged();
    partial void OnIfSellChanging(bool value);
    partial void OnIfSellChanged();
    partial void OnStrikeChanging(System.Nullable<decimal> value);
    partial void OnStrikeChanged();
    partial void OnExpiryChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryChanged();
    partial void OnOpenPriceChanging(System.Nullable<decimal> value);
    partial void OnOpenPriceChanged();
    partial void OnClosePriceChanging(System.Nullable<decimal> value);
    partial void OnClosePriceChanged();
    partial void OnPremiumChanging(System.Nullable<decimal> value);
    partial void OnPremiumChanged();
    partial void OnNoContractsChanging(int value);
    partial void OnNoContractsChanged();
    partial void OnCommissionsChanging(System.Nullable<decimal> value);
    partial void OnCommissionsChanged();
    partial void OnOpenDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOpenDateChanged();
    partial void OnClosedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnClosedDateChanged();
    partial void OnProfitLossChanging(System.Nullable<decimal> value);
    partial void OnProfitLossChanged();
    partial void OnProfitLossTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnProfitLossTimeStampChanged();
    partial void OnYesterdayProfitLossChanging(System.Nullable<decimal> value);
    partial void OnYesterdayProfitLossChanged();
    partial void OnYesterdayProfitLossTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnYesterdayProfitLossTimeStampChanged();
    partial void OnLinkageChanging(System.Nullable<System.Guid> value);
    partial void OnLinkageChanged();
    partial void OnLastEmailChanging(System.Nullable<System.DateTime> value);
    partial void OnLastEmailChanged();
    #endregion
		
		public Position()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticker", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Ticker
		{
			get
			{
				return this._Ticker;
			}
			set
			{
				if ((this._Ticker != value))
				{
					this.OnTickerChanging(value);
					this.SendPropertyChanging();
					this._Ticker = value;
					this.SendPropertyChanged("Ticker");
					this.OnTickerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IfClosed", DbType="Bit")]
		public System.Nullable<bool> IfClosed
		{
			get
			{
				return this._IfClosed;
			}
			set
			{
				if ((this._IfClosed != value))
				{
					this.OnIfClosedChanging(value);
					this.SendPropertyChanging();
					this._IfClosed = value;
					this.SendPropertyChanged("IfClosed");
					this.OnIfClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IfCall", DbType="Bit NOT NULL")]
		public bool IfCall
		{
			get
			{
				return this._IfCall;
			}
			set
			{
				if ((this._IfCall != value))
				{
					this.OnIfCallChanging(value);
					this.SendPropertyChanging();
					this._IfCall = value;
					this.SendPropertyChanged("IfCall");
					this.OnIfCallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IfSell", DbType="Bit NOT NULL")]
		public bool IfSell
		{
			get
			{
				return this._IfSell;
			}
			set
			{
				if ((this._IfSell != value))
				{
					this.OnIfSellChanging(value);
					this.SendPropertyChanging();
					this._IfSell = value;
					this.SendPropertyChanged("IfSell");
					this.OnIfSellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strike", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Strike
		{
			get
			{
				return this._Strike;
			}
			set
			{
				if ((this._Strike != value))
				{
					this.OnStrikeChanging(value);
					this.SendPropertyChanging();
					this._Strike = value;
					this.SendPropertyChanged("Strike");
					this.OnStrikeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expiry", DbType="Date")]
		public System.Nullable<System.DateTime> Expiry
		{
			get
			{
				return this._Expiry;
			}
			set
			{
				if ((this._Expiry != value))
				{
					this.OnExpiryChanging(value);
					this.SendPropertyChanging();
					this._Expiry = value;
					this.SendPropertyChanged("Expiry");
					this.OnExpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenPrice", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> OpenPrice
		{
			get
			{
				return this._OpenPrice;
			}
			set
			{
				if ((this._OpenPrice != value))
				{
					this.OnOpenPriceChanging(value);
					this.SendPropertyChanging();
					this._OpenPrice = value;
					this.SendPropertyChanged("OpenPrice");
					this.OnOpenPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosePrice", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ClosePrice
		{
			get
			{
				return this._ClosePrice;
			}
			set
			{
				if ((this._ClosePrice != value))
				{
					this.OnClosePriceChanging(value);
					this.SendPropertyChanging();
					this._ClosePrice = value;
					this.SendPropertyChanged("ClosePrice");
					this.OnClosePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Premium", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Premium
		{
			get
			{
				return this._Premium;
			}
			set
			{
				if ((this._Premium != value))
				{
					this.OnPremiumChanging(value);
					this.SendPropertyChanging();
					this._Premium = value;
					this.SendPropertyChanged("Premium");
					this.OnPremiumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoContracts", DbType="Int NOT NULL")]
		public int NoContracts
		{
			get
			{
				return this._NoContracts;
			}
			set
			{
				if ((this._NoContracts != value))
				{
					this.OnNoContractsChanging(value);
					this.SendPropertyChanging();
					this._NoContracts = value;
					this.SendPropertyChanged("NoContracts");
					this.OnNoContractsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commissions", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Commissions
		{
			get
			{
				return this._Commissions;
			}
			set
			{
				if ((this._Commissions != value))
				{
					this.OnCommissionsChanging(value);
					this.SendPropertyChanging();
					this._Commissions = value;
					this.SendPropertyChanged("Commissions");
					this.OnCommissionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenDate", DbType="Date")]
		public System.Nullable<System.DateTime> OpenDate
		{
			get
			{
				return this._OpenDate;
			}
			set
			{
				if ((this._OpenDate != value))
				{
					this.OnOpenDateChanging(value);
					this.SendPropertyChanging();
					this._OpenDate = value;
					this.SendPropertyChanged("OpenDate");
					this.OnOpenDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedDate", DbType="Date")]
		public System.Nullable<System.DateTime> ClosedDate
		{
			get
			{
				return this._ClosedDate;
			}
			set
			{
				if ((this._ClosedDate != value))
				{
					this.OnClosedDateChanging(value);
					this.SendPropertyChanging();
					this._ClosedDate = value;
					this.SendPropertyChanged("ClosedDate");
					this.OnClosedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfitLoss", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ProfitLoss
		{
			get
			{
				return this._ProfitLoss;
			}
			set
			{
				if ((this._ProfitLoss != value))
				{
					this.OnProfitLossChanging(value);
					this.SendPropertyChanging();
					this._ProfitLoss = value;
					this.SendPropertyChanged("ProfitLoss");
					this.OnProfitLossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfitLossTimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProfitLossTimeStamp
		{
			get
			{
				return this._ProfitLossTimeStamp;
			}
			set
			{
				if ((this._ProfitLossTimeStamp != value))
				{
					this.OnProfitLossTimeStampChanging(value);
					this.SendPropertyChanging();
					this._ProfitLossTimeStamp = value;
					this.SendPropertyChanged("ProfitLossTimeStamp");
					this.OnProfitLossTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YesterdayProfitLoss", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> YesterdayProfitLoss
		{
			get
			{
				return this._YesterdayProfitLoss;
			}
			set
			{
				if ((this._YesterdayProfitLoss != value))
				{
					this.OnYesterdayProfitLossChanging(value);
					this.SendPropertyChanging();
					this._YesterdayProfitLoss = value;
					this.SendPropertyChanged("YesterdayProfitLoss");
					this.OnYesterdayProfitLossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YesterdayProfitLossTimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> YesterdayProfitLossTimeStamp
		{
			get
			{
				return this._YesterdayProfitLossTimeStamp;
			}
			set
			{
				if ((this._YesterdayProfitLossTimeStamp != value))
				{
					this.OnYesterdayProfitLossTimeStampChanging(value);
					this.SendPropertyChanging();
					this._YesterdayProfitLossTimeStamp = value;
					this.SendPropertyChanged("YesterdayProfitLossTimeStamp");
					this.OnYesterdayProfitLossTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Linkage", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Linkage
		{
			get
			{
				return this._Linkage;
			}
			set
			{
				if ((this._Linkage != value))
				{
					this.OnLinkageChanging(value);
					this.SendPropertyChanging();
					this._Linkage = value;
					this.SendPropertyChanged("Linkage");
					this.OnLinkageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEmail", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastEmail
		{
			get
			{
				return this._LastEmail;
			}
			set
			{
				if ((this._LastEmail != value))
				{
					this.OnLastEmailChanging(value);
					this.SendPropertyChanging();
					this._LastEmail = value;
					this.SendPropertyChanged("LastEmail");
					this.OnLastEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
